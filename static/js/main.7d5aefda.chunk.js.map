{"version":3,"sources":["data.js","Cart.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["name","id","title","content","price","connect","state","console","log","reducer","alert","reducer2","props","Table","responsive","map","a","i","quan","className","onClick","dispatch","type","payload","Detail","lazy","storeContext","React","createContext","Card","history","useHistory","push","shoes","src","index","width","Test","store","useContext","App","useState","Data","setShoes","setStore","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","axios","post","pw","get","then","result","data","catch","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","baseState","createStore","combineReducers","action","found","findIndex","copy","copyBaseState","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7d5aefda.chunk.js","sourcesContent":["var name = [\n    {\n        id: 0,\n        title: \"White and Black\",\n        content: \"Born in France\",\n        price: 120000\n    },\n\n    {\n        id: 1,\n        title: \"Red Knit\",\n        content: \"Born in Seoul\",\n        price: 110000\n    },\n\n    {\n        id: 2,\n        title: \"Grey Yordan\",\n        content: \"Born in the States\",\n        price: 130000\n    }\n]\n\nexport default name","import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nfunction Cart(props) {\n    // redux 로 굳이 사용하지 않고 useState를 쓸수있음\n    // let [alertState, setAlertState] = useState(true);\n\n    return (\n        <div>\n            <Table responsive=\"sm\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>상품명</th>\n                        <th>수량</th>\n                        <th>변경</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        props.state.map((a, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td>{a.id}</td>\n                                    <td>{a.name}</td>\n                                    <td>{a.quan}</td>\n                                    <td>\n                                        <button className=\"btn btn-success\" onClick={() => { props.dispatch({ type: '수량증가', payload: a.id }) }}>+</button>\n                                        &nbsp;\n                                        <button className=\"btn btn-danger\" onClick={() => { props.dispatch({ type: '수량감소', payload: a.id }) }}>-</button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n\n                </tbody>\n            </Table>\n            {\n                props.alert === true\n                    ? <div className=\"my-alert-red\">\n                        <p>지금 구매하시면 신규 할인 20%</p>\n                        <button className=\"btn btn-primary\" onClick={() => { props.dispatch({ type: 'alert닫기' }) }}>닫기</button>\n                    </div>\n                    : null\n            }\n        </div>\n    )\n}\n\nfunction storeToProps(state) {\n    console.log(state);\n    return {\n        state: state.reducer,\n        alert: state.reducer2\n\n    }\n}\nexport default connect(storeToProps)(Cart)\n\n// export default Cart;","/* eslint-disable */\nimport React, { useContext, useState, lazy, Suspense } from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap'\nimport './App.css';\nimport Data from './data.js';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n// import Detail from './Detail.js';\nlet Detail = lazy(() => { return import('./Detail.js') });\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\nexport let storeContext = React.createContext(); //같은 변수값을 공유할..\n\n\nfunction App() {\n\n  let [shoes, setShoes] = useState(Data);\n  let [loading, setLoading] = useState(true);\n  let [store, setStore] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\" className=\"\">\n        <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n          </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n\n          <div className=\"container\">\n\n            <storeContext.Provider value={store}>\n\n              <div className=\"row\">\n                {\n                  shoes.map((a, i) => {\n                    return <Card shoes={shoes[i]} index={i} key={i} />\n                  })\n                }\n              </div>\n            </storeContext.Provider>\n            <button className=\"btn btn-primary\" onClick={() => {\n              //로딩중이라는 UI 띄움\n\n              axios.post('서버URL', { id: 'codingapple', pw: 1234 });\n\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n                .then((result) => {\n                  //로딩중이라는 UI 삭제\n                  console.log('성공');\n                  console.log(result.data);\n                  setShoes([...shoes, ...result.data]);\n                })\n                .catch(() => {\n                  //로딩중이라는 UI 삭제\n                  console.log('실패');\n                })\n            }}>더보기</button>\n          </div>\n\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <storeContext.Provider value={store}>\n            <Suspense fallback={<div>로딩중이에요</div>}>\n              <Detail shoes={shoes} store={store} setStore={setStore} />\n            </Suspense>\n          </storeContext.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을 때 </div>\n        </Route>\n\n\n\n      </Switch>\n    </div>\n  );\n}\n\n\nfunction Card(props) {\n  let history = useHistory();\n\n  return (\n    <div className=\"col-md-4\" onClick={() => { history.push('/detail/' + props.shoes.id) }}>\n      <img src={\"http://codingapple1.github.io/shop/shoes\" + (props.index + 1) + \".jpg\"} width=\"100%\" />\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} & {props.shoes.price}</p>\n      <Test ></Test>\n    </div>\n  )\n}\n\nfunction Test() {\n  let store = useContext(storeContext);\n  return (\n    <p>재고 : {store[0]}</p>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\nlet alertBasic = true;\n\nfunction reducer2(state = alertBasic, action) {\n  if (action.type === 'alert닫기') {\n    return state = false;\n  } else {\n    return state;\n  }\n}\n\nlet baseState = [\n  { id: 0, name: \"멋진신발\", quan: 2 },\n  { id: 1, name: \"이쁜구두\", quan: 3 },\n];\n\nfunction reducer(state = baseState, action) {\n  if (action.type === '항목추가') {\n    //state 안에 id : 액션.데이터 인게 있냐?\n    let found = state.findIndex((a) => {\n      return a.id === action.payload.id\n    });\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(action.payload);\n      return copy;\n    }\n\n  } else if (action.type === \"수량증가\") {\n    let copyBaseState = [...state];\n    copyBaseState[action.payload].quan++;\n    return copyBaseState;\n\n  } else if (action.type === \"수량감소\") {\n    let copyBaseState = [...state];\n    copyBaseState[action.payload].quan--;\n    return copyBaseState;\n  } else {\n    return state;\n  }\n}\n\n// let store = createStore(reducer);\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}