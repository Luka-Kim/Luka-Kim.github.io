{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","setSwitch1","tab","Info","store","connect","state","console","log","reducer","alert","reducer2","useState","setAlert","inputData","useContext","storeContext","setTab","switch1","timer","setTimeout","clearTimeout","id","useParams","history","useHistory","className","src","width","shoes","title","content","price","onClick","setStore","dispatch","type","payload","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"qOAUIA,EAAKC,IAAOC,IAAV,+CAIFC,EAAKF,IAAOG,GAAV,mEAEO,SAAAC,GAAK,OAAIA,EAAMC,gBAuF5B,SAASC,EAAWF,GAIhB,OAHAG,qBAAU,WACNH,EAAMI,YAAW,MAEH,IAAdJ,EAAMK,IACC,gFACc,IAAdL,EAAMK,IACN,gFACc,IAAdL,EAAMK,IACN,qFADJ,EAKX,SAASC,EAAKN,GACV,OACI,gDAASA,EAAMO,MAAM,MAadC,uBATf,SAAsBC,GAElB,OADAC,QAAQC,IAAIF,GACL,CACHA,MAAOA,EAAMG,QACbC,MAAOJ,EAAMK,YAKNN,EAhHf,SAAgBR,GAAQ,IAAD,EAEKe,oBAAS,GAFd,mBAEdF,EAFc,KAEPG,EAFO,OAGaD,mBAAS,IAHtB,mBAGdE,EAHc,aAIPC,qBAAWC,KAEHJ,mBAAS,IANV,mBAMdV,EANc,KAMTe,EANS,OAOSL,oBAAS,GAPlB,mBAOdM,EAPc,KAOLjB,EAPK,KAUnBD,qBAAU,WAMN,IAAImB,EAAQC,YAAW,WACnBP,GAAS,KACV,KAGH,OAAO,WAAQQ,aAAaF,MAC7B,CAACT,IAtBe,IAwBbY,EAAOC,cAAPD,GACFE,EAAUC,cAEd,OACI,sBAAKC,UAAU,YAAf,UACI,cAAClC,EAAD,UACI,cAACG,EAAD,CAAI+B,UAAU,MAAd,sBAEHZ,GAIa,IAAVJ,EAEQ,qBAAKgB,UAAU,eAAf,SACI,+GAGN,KAIV,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKC,IAAK,4CAA8CL,EAAK,OAAQM,MAAM,WAE/E,sBAAKF,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsB7B,EAAMgC,MAAMP,GAAIQ,QACtC,4BAAIjC,EAAMgC,MAAMP,GAAIS,UACpB,8BAAIlC,EAAMgC,MAAMP,GAAIU,MAApB,YAEA,cAAC7B,EAAD,CAAMC,MAAOP,EAAMO,QACnB,wBAAQsB,UAAU,iBAAiBO,QAAS,WACxCpC,EAAMqC,SAAS,CAAC,EAAG,GAAI,KACvBrC,EAAMsC,SAAS,CAAEC,KAAM,2BAAQC,QAAS,CAAEf,GAAIA,EAAIgB,KAAMzC,EAAMgC,MAAMP,GAAIQ,MAAOS,KAAM,KACrFf,EAAQgB,KAAK,UAHjB,sCANJ,OAYI,wBAAQd,UAAU,iBAAiBO,QAAS,WACxCT,EAAQiB,UADZ,4CAOR,eAAC,IAAD,CAAKf,UAAU,OAAOgB,QAAQ,OAAOC,iBAAiB,SAAtD,UACI,cAAC,IAAIC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAQhB,EAAO,GAAIhB,GAAW,IAAnE,wBAEJ,cAAC,IAAI2C,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAQhB,EAAO,GAAIhB,GAAW,IAAnE,2BAGR,cAAC,IAAD,CAAe8C,GAAI7B,EAAS8B,WAAW,MAAMC,QAAS,IAAtD,SACI,cAAClD,EAAD,CAAYG,IAAKA,EAAKD,WAAYA","file":"static/js/4.dc83f5a6.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Nav } from 'react-bootstrap'\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { storeContext } from './App.js';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nlet 박스 = styled.div`\n    paddng: 20px;\n`;\n\nlet 제목 = styled.h4`\n    font-size : 25px;\n    color: ${props => props.색상}\n`;\n\nfunction Detail(props) {\n\n    let [alert, setAlert] = useState(true);\n    let [inputData, setInputData] = useState('');\n    let store = useContext(storeContext);\n\n    let [tab, setTab] = useState(0);\n    let [switch1, setSwitch1] = useState(false);\n\n    //2초 후에 사라지게\n    useEffect(() => {\n\n        //페이지 시작시 ajax 데이터 호출 방법은 아래와 같이\n        // 맨 마지막에 [] 로 1회 요청만 하도록 함\n        // axios.get()\n\n        let timer = setTimeout(() => {\n            setAlert(false);\n        }, 2000);\n\n        //이후에 실행해주세요.\n        return () => { clearTimeout(timer) }\n    }, [alert]);\n\n    let { id } = useParams(); //사용자가 입력한 URL \n    let history = useHistory();\n\n    return (\n        <div className=\"container\">\n            <박스>\n                <제목 className=\"red\">Detail</제목>\n            </박스>\n            {inputData}\n            {/* <input onChange={(e) => { setInputData(e.target.value) }} /> */}\n\n            {\n                alert === true\n                    ? (\n                        <div className=\"my-alert-red\">\n                            <p>재고가 얼마 남지 않았습니다.</p>\n                        </div>\n                    )\n                    : null\n\n            }\n\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <img src={\"https://codingapple1.github.io/shop/shoes\" + id + \".jpg\"} width=\"100%\" />\n                </div>\n                <div className=\"col-md-6 mt-4\">\n                    <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\n                    <p>{props.shoes[id].content}</p>\n                    <p>{props.shoes[id].price}원</p>\n\n                    <Info store={props.store}></Info>\n                    <button className=\"btn btn-danger\" onClick={() => {\n                        props.setStore([9, 11, 12]);\n                        props.dispatch({ type: '항목추가', payload: { id: id, name: props.shoes[id].title, quan: 1 } });\n                        history.push('/cart');\n                    }}>주문하기</button>\n                    &nbsp;\n                    <button className=\"btn btn-danger\" onClick={() => {\n                        history.goBack()\n                        // history.push('/')\n                    }}>뒤로가기</button>\n                </div>\n            </div>\n\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n                <Nav.Item>\n                    <Nav.Link eventKey=\"link-0\" onClick={() => { setTab(0); setSwitch1(false) }}>Activity</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={() => { setTab(1); setSwitch1(false) }}>Option 2</Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <CSSTransition in={switch1} classNames=\"wow\" timeout={500} >\n                <TabContent tab={tab} setSwitch1={setSwitch1}></TabContent>\n            </CSSTransition>\n        </div>\n    )\n}\n\nfunction TabContent(props) {\n    useEffect(() => {\n        props.setSwitch1(true);\n    });\n    if (props.tab === 0) {\n        return <div>0번째 내용입니다.</div>\n    } else if (props.tab === 1) {\n        return <div>1번째 내용입니다.</div>\n    } else if (props.tab === 2) {\n        return <div>2번째 내용입니다.</div>\n    }\n}\n\nfunction Info(props) {\n    return (\n        <p>재고 : {props.store[0]}</p>\n    )\n}\n\nfunction storeToProps(state) {\n    console.log(state);\n    return {\n        state: state.reducer,\n        alert: state.reducer2\n\n    }\n}\n// export default Detail;\nexport default connect(storeToProps)(Detail)"],"sourceRoot":""}